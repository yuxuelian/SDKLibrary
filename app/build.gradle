apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'AndResGuard'

// 资源文件混淆打包工具(只有发布版本的时候才用)
andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    use7zip = true
    useSign = true
    // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
    keepRoot = false
    // 白名单
    whiteList = []
    compressFilePattern = ["*.png", "*.jpg", "*.jpeg", "*.gif",]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.15'
        //path = "/usr/local/bin/7za"
    }
    // 可选： 如果不设置则会默认覆盖assemble输出的apk
    finalApkBackupPath = "${project.rootDir}/final-release.apk"
    // 可选: 指定v1签名时生成jar文件的摘要算法 默认值为“SHA-1”
    digestalg = "SHA-256"
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
//    enableD8.desugaring = true
//    useDexArchive = false
    signingConfigs {
        configuration {
            keyAlias "kaibo"
            keyPassword "kaibo123"
            storeFile file("../my1.jks")
            storePassword "kaibo123"
        }
    }

    defaultConfig {
        applicationId "com.kaibo.demo"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
//            abiFilters 'armeabi-v7a'
            abiFilters 'armeabi-v7a', 'x86'
        }
        // 信鸽推送配置
        manifestPlaceholders = [
                XG_ACCESS_ID : "2100315778",
                XG_ACCESS_KEY: "AFWZ7M129U4A",
        ]
        vectorDrawables.useSupportLibrary = true
//        buildConfigField("String", "BASE_URL", "\"${baseUrl}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            // 混淆规则
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 签名
            signingConfig signingConfigs.configuration
        }

        debug {
            minifyEnabled false
            // 混淆规则
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 签名
            signingConfig signingConfigs.configuration
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        disable "MissingTranslation"
        disable 'GoogleAppIndexingWarning'
        abortOnError false
    }

    compileOptions {
        sourceCompatibility rootProject.sourceCompatibility
        targetCompatibility rootProject.targetCompatibility
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation junit
    androidTestImplementation androidx_test_runner
    androidTestImplementation androidx_test_espresso_core
    implementation kotlin_stdlib

    implementation project(':Core')
}

// 依赖插件脚本
apply from: '../tinker-support.gradle'
